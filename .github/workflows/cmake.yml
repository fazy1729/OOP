name: C++ CI

on:
  push:
    branches: ['*']
    tags: ['*']
  pull_request:
    branches: ['*']
  workflow_dispatch:
    inputs:
      build_type:
        description: Build type
        required: false
        default: 'Debug'
        type: choice
        options:
          - Debug
          - Release
          - RelWithDebInfo
          - MinSizeRel

env:
  BUILD_TYPE: ${{ inputs.build_type || 'Debug' }}
  EXECUTABLE_NAME: "oop"
  INPUT_FILENAME: "input.txt"
  BIN_DIR: "bin"
  BUILD_DIR: "build"
  EXT_DIR: "ext"
  GEN_DIR: "generated"

defaults:
  run:
    shell: bash

jobs:
  cppcheck:
    name: "Cppcheck"
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    if: startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/')
    env:
      CPPCHECK_VER: "2.14.2"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run cppcheck
        uses: ./.github/actions/cppcheck
  clang-tidy:
    name: "Clang-Tidy"
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    if: startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/')
    env:
     CLANG_VER: 18
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run clang-tidy
        uses: ./.github/actions/clang-tidy

  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    if: startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/')
    env:
      CPPCHECK_VER: "2.14.2"
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            c: clang-18
            cxx: clang++-18
            name: "MSan: Ubuntu 22.04 Clang 18"
            runs_cppcheck: true

          - os: ubuntu-22.04
            c: gcc-12
            cxx: g++-12
            name: "ASan: Ubuntu 22.04 GCC 12"
            runs_cppcheck: true

          - os: ubuntu-22.04
            c: gcc-12
            cxx: g++-12
            name: "Valgrind: Ubuntu 22.04 GCC 12"
            runs_cppcheck: true

          - os: macos-14
            c: clang
            cxx: clang++
            name: "macOS 14 Apple Clang 15"
            runs_cppcheck: true

          - os: macos-14
            c: gcc-13
            cxx: g++-13
            name: "macOS 14 GCC 13"
            runs_cppcheck: true

          - os: windows-2022
            c: cl
            cxx: cl
            name: "ASan: Windows 2022 MSVC 19.41"
            runs_cppcheck: true

          - os: windows-2022
            c: gcc
            cxx: g++-8
            name: "Windows 2022 MinGW GCC 13"
            runs_cppcheck: true

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run cppcheck
        uses: ./.github/actions/cppcheck
